#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define ARQUIVO "filmes.txt"

#define MAX_STRING 100
#define MAX_FILMES 5

typedef struct
{
    char titulo[MAX_STRING];
    char diretor[MAX_STRING];
    int anoLancamento;
    float classificacao;
    int quantidade;
    float preco; 
} Filme;

void mostrarFilmes();
Filme cadastrarFilme();
void exibirFilme(int i);
void salvarFilmes();
void carregarFilmes();
void buscarFilmePorNomeOuDiretor();
void excluirFilme(int index);
void alugarFilme(int index);

Filme filmes[MAX_FILMES];
int totalFilmes = 0;

int main()
{
    int opcao, index;

    do
    {
        printf("\nLocadora de Filmes\n");
        printf("1. Cadastrar Filme\n");
        printf("2. Ver Filmes Cadastrados\n");
        printf("3. Ver Dados de um filme\n");
        printf("4. Buscar Filme por Nome ou Diretor\n");
        printf("5. Excluir Filme\n");
        printf("6. Alugar Filme\n");
        printf("7. Salvar Filmes\n");
        printf("8. Carregar Filmes\n");
        printf("9. Sair\n");
        printf("Escolha uma opção: ");
        scanf("%d", &opcao);

        switch (opcao)
        {
        case 1:
            if (totalFilmes < MAX_FILMES)
            {
                filmes[totalFilmes] = cadastrarFilme();
                totalFilmes++;
            }
            else
            {
                printf("Quantidade máxima de filmes cadastrada.\n");
            }
            break;
        case 2:
            mostrarFilmes();
            break;
        case 3:
            printf("Informe o índice do filme que você deseja: ");
            scanf("%d", &index);
            exibirFilme(index);
            break;
        case 4:
            buscarFilmePorNomeOuDiretor();
            break;
        case 5:
            printf("Informe o índice do filme que você deseja excluir: ");
            scanf("%d", &index);
            excluirFilme(index);
            break;
        case 6:
            printf("Informe o índice do filme que você deseja alugar: ");
            scanf("%d", &index);
            alugarFilme(index);
            break;
        case 7:
            salvarFilmes();
            break;
        case 8:
            carregarFilmes();
            break;
        case 9:
            printf("Saindo do programa...\n");
            break;
        default:
            printf("Opção inválida!\n");
        }

    } while (opcao != 9);

    return 0;
}

Filme cadastrarFilme()
{
    Filme f;
    getchar();

    printf("\n--- Cadastro de Filme ---\n");
    printf("Informe o título do filme: ");
    fgets(f.titulo, MAX_STRING, stdin);
    f.titulo[strcspn(f.titulo, "\n")] = '\0';

    printf("Informe o diretor do filme: ");
    fgets(f.diretor, MAX_STRING, stdin);
    f.diretor[strcspn(f.diretor, "\n")] = '\0';

    printf("Informe o ano de lançamento do filme: ");
    scanf("%d", &f.anoLancamento);

    printf("Informe a classificação do filme (0.0 a 10.0): ");
    scanf("%f", &f.classificacao);

    printf("Informe a quantidade de cópias em estoque: ");
    scanf("%d", &f.quantidade);

    printf("Informe o preço de aluguel do filme: ");
    scanf("%f", &f.preco);

    return f;
}

void exibirFilme(int i)
{
    Filme f = filmes[i];
    printf("\nTítulo: %s\n", f.titulo);
    printf("Diretor: %s\n", f.diretor);
    printf("Ano de Lançamento: %d\n", f.anoLancamento);
    printf("Classificação: %.1f\n", f.classificacao);
    printf("Quantidade em estoque: %d\n", f.quantidade);
    printf("Preço de aluguel: R$ %.2f\n", f.preco);
}

void mostrarFilmes()
{
    printf("\n--- Lista de Filmes ---\n");

    if (totalFilmes == 0)
    {
        printf("Nenhum filme foi cadastrado ainda!\n");
    }
    else
    {
        for (int i = 0; i < totalFilmes; i++)
        {
            exibirFilme(i);
        }
    }
}

void buscarFilmePorNomeOuDiretor()
{
    char termoBusca[MAX_STRING];
    printf("Informe o nome ou diretor do filme que deseja buscar: ");
    getchar();
    fgets(termoBusca, MAX_STRING, stdin);
    termoBusca[strcspn(termoBusca, "\n")] = '\0';

    printf("\n--- Resultados da Busca ---\n");

    int encontrados = 0;
    for (int i = 0; i < totalFilmes; i++)
    {
        if (strstr(filmes[i].titulo, termoBusca) || strstr(filmes[i].diretor, termoBusca))
        {
            exibirFilme(i);
            encontrados++;
        }
    }

    if (encontrados == 0)
    {
        printf("Nenhum filme encontrado com o termo de busca \"%s\".\n", termoBusca);
    }
    else
    {
        printf("Total de filmes encontrados: %d\n", encontrados);
    }
}

void excluirFilme(int index)
{
    if (index < 0 || index >= totalFilmes)
    {
        printf("Índice de filme inválido!\n");
        return;
    }

    for (int i = index; i < totalFilmes - 1; i++)
    {
        filmes[i] = filmes[i + 1];
    }

    totalFilmes--;
    printf("Filme excluído com sucesso!\n");
}

void alugarFilme(int index)
{
    if (index < 0 || index >= totalFilmes)
    {
        printf("Índice de filme inválido!\n");
        return;
    }

    if (filmes[index].quantidade > 0)
    {
        filmes[index].quantidade--;
        printf("Filme \"%s\" alugado com sucesso!\n", filmes[index].titulo);
    }
    else
    {
        printf("Desculpe, não há cópias disponíveis para aluguel deste filme.\n");
    }
}

void salvarFilmes()
{
    FILE *file = fopen(ARQUIVO, "w");
    if (file == NULL)
    {
        printf("Erro ao salvar os filmes!\n");
        return;
    }

    for (int i = 0; i < totalFilmes; i++)
    {
        fprintf(file, "\"%s\",\"%s\",%d,%.1f,%d,%.2f\n",
                filmes[i].titulo,
                filmes[i].diretor,
                filmes[i].anoLancamento,
                filmes[i].classificacao,
                filmes[i].quantidade,
                filmes[i].preco);
    }

    fclose(file);
    printf("Filmes salvos com sucesso!\n");
}

void carregarFilmes()
{
    FILE *file = fopen(ARQUIVO, "r");
    if (file == NULL)
    {
        return; 
    }

    totalFilmes = 0;

    while (fscanf(file, "\"%[^\"]\",\"%[^\"]\",%d,%f,%d,%f\n",
                  filmes[totalFilmes].titulo,
                  filmes[totalFilmes].diretor,
                  &filmes[totalFilmes].anoLancamento,
                  &filmes[totalFilmes].classificacao,
                  &filmes[totalFilmes].quantidade,
                  &filmes[totalFilmes].preco) != EOF)
    {
        totalFilmes++;
    }

    fclose(file);
}
